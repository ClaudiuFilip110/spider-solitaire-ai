{"ast":null,"code":"var _jsxFileName = \"/Users/claudiufilip/Developer/personal-projects/spider-solitaire-ai/frontend/src/logic/ComponentCreate.js\";\nimport BlankCard from '../components/Card/BlankCard';\nimport Card from '../components/Card/Card';\nimport BlankColumnCard from '../components/Card/BlankColumnCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const blankWrap = complete => {\n  let blanks = [];\n  for (let index = 0; index < 8; index++) {\n    blanks.push( /*#__PURE__*/_jsxDEV(BlankCard, {\n      complete: complete,\n      index: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this));\n  }\n  return blanks;\n};\nexport const cardsPush = (card, index, clickCard) => {\n  let pushed = [];\n  if (card === null) {\n    pushed.push( /*#__PURE__*/_jsxDEV(BlankColumnCard, {\n      clickCard: clickCard,\n      card: card,\n      index: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this));\n  }\n  let marginValue = 0; // for placing cards\n  while (card !== null) {\n    // pushed array contains each card \n    pushed.push( /*#__PURE__*/_jsxDEV(Card, {\n      marginValue: marginValue,\n      clickCard: clickCard,\n      index: index,\n      card: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this));\n    card = card.next;\n    marginValue += 1;\n  }\n  return pushed;\n};","map":{"version":3,"names":["BlankCard","Card","BlankColumnCard","jsxDEV","_jsxDEV","blankWrap","complete","blanks","index","push","fileName","_jsxFileName","lineNumber","columnNumber","cardsPush","card","clickCard","pushed","marginValue","next"],"sources":["/Users/claudiufilip/Developer/personal-projects/spider-solitaire-ai/frontend/src/logic/ComponentCreate.js"],"sourcesContent":["import BlankCard from '../components/Card/BlankCard'\nimport Card from '../components/Card/Card'\nimport BlankColumnCard from '../components/Card/BlankColumnCard'\n\nexport const blankWrap = (complete) => {\n    let blanks = []\n\n    for (let index = 0; index < 8; index++) {\n        blanks.push( \n        <BlankCard complete={complete} index={index} />\n        )\n    }\n    return blanks\n}\n\nexport const cardsPush = (card, index, clickCard) => {\n        let pushed =[]\n        if (card === null) {\n            pushed.push(\n                <BlankColumnCard clickCard={clickCard} card={card} index={index} />\n            )\n        }\n\n        let marginValue = 0 // for placing cards\n        while (card !== null) {\n\n        // pushed array contains each card \n        pushed.push(\n            <Card marginValue={marginValue} clickCard={clickCard} index={index} card={card} />\n        )\n        card = card.next\n        marginValue += 1\n    }\n    return pushed\n}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,8BAA8B;AACpD,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,eAAe,MAAM,oCAAoC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,SAAS,GAAIC,QAAQ,IAAK;EACnC,IAAIC,MAAM,GAAG,EAAE;EAEf,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC,EAAEA,KAAK,EAAE,EAAE;IACpCD,MAAM,CAACE,IAAI,eACXL,OAAA,CAACJ,SAAS;MAACM,QAAQ,EAAEA,QAAS;MAACE,KAAK,EAAEA;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC9C,CAAC;EACL;EACA,OAAON,MAAM;AACjB,CAAC;AAED,OAAO,MAAMO,SAAS,GAAGA,CAACC,IAAI,EAAEP,KAAK,EAAEQ,SAAS,KAAK;EAC7C,IAAIC,MAAM,GAAE,EAAE;EACd,IAAIF,IAAI,KAAK,IAAI,EAAE;IACfE,MAAM,CAACR,IAAI,eACPL,OAAA,CAACF,eAAe;MAACc,SAAS,EAAEA,SAAU;MAACD,IAAI,EAAEA,IAAK;MAACP,KAAK,EAAEA;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACtE,CAAC;EACL;EAEA,IAAIK,WAAW,GAAG,CAAC,EAAC;EACpB,OAAOH,IAAI,KAAK,IAAI,EAAE;IAEtB;IACAE,MAAM,CAACR,IAAI,eACPL,OAAA,CAACH,IAAI;MAACiB,WAAW,EAAEA,WAAY;MAACF,SAAS,EAAEA,SAAU;MAACR,KAAK,EAAEA,KAAM;MAACO,IAAI,EAAEA;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACrF,CAAC;IACDE,IAAI,GAAGA,IAAI,CAACI,IAAI;IAChBD,WAAW,IAAI,CAAC;EACpB;EACA,OAAOD,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module"}