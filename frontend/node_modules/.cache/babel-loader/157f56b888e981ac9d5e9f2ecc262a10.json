{"ast":null,"code":"var _jsxFileName = \"/Users/claudiufilip/Developer/personal-projects/spider-solitaire-ai/frontend/src/components/Card/Card.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport CardTypeFinder from './CardTypeFinder';\nimport useWindowDimensions from '../../useWindowDimensions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  marginValue,\n  clickCard,\n  index,\n  card\n}) => {\n  _s();\n  const isDraggable = card => {\n    while (card.next !== null) {\n      let next_value = +card.next.val.value - 1;\n      let cur_value = +card.val.value;\n      // check cards if in correct order\n      if (next_value !== cur_value || card.val.show === false) {\n        return false;\n      }\n      card = card.next;\n    }\n    return true;\n  };\n  const {\n    width: width2\n  } = useWindowDimensions();\n  const id = card.val.value + \" \" + card.val.deck; // calculate each cards spesific id\n  const cardType = CardTypeFinder(card); // get correct image for card's value\n  const isActive = card.val.active;\n  const isShow = card.val.show;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    draggable: isDraggable(card),\n    onDragStart: clickCard(card, index),\n    onDrop: clickCard(card, index),\n    onDragOver: e => e.preventDefault(),\n    id: id,\n    className: \"card \" + (isActive ? 'selectedCard' : '') // if card's active property true, highlight to card\n    ,\n    onClick: clickCard(card, index),\n    style: {\n      marginTop: marginValue * (width2 < 910 ? 15 : 25),\n      ...(isShow ? {\n        // if card's show property true, display the card\n        background: `var(${cardType})`,\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat'\n      } : \"\"),\n      ...(width2 < 1150 ? {\n        height: width2 > 910 ? 90 : 50,\n        width: width2 > 910 ? 65 : 36\n      } : \"\")\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"wXj+yI/lCgA30/3GqrGAD6arzgU=\", false, function () {\n  return [useWindowDimensions];\n});\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","CardTypeFinder","useWindowDimensions","jsxDEV","_jsxDEV","Card","marginValue","clickCard","index","card","_s","isDraggable","next","next_value","val","value","cur_value","show","width","width2","id","deck","cardType","isActive","active","isShow","draggable","onDragStart","onDrop","onDragOver","e","preventDefault","className","onClick","style","marginTop","background","backgroundSize","backgroundRepeat","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/claudiufilip/Developer/personal-projects/spider-solitaire-ai/frontend/src/components/Card/Card.js"],"sourcesContent":["import React from 'react'\nimport CardTypeFinder from './CardTypeFinder'\nimport useWindowDimensions from '../../useWindowDimensions'\n\nconst Card = ({marginValue, clickCard, index, card}) => {\n\n    const isDraggable = (card) => {\n        while (card.next !== null) {\n\n            let next_value = +card.next.val.value - 1;\n            let cur_value = +card.val.value;\n            // check cards if in correct order\n            if (next_value !== cur_value || card.val.show === false) {\n                return false\n            }\n\n            card = card.next\n        }\n        return true\n    }\n\n    const { width:width2 } = useWindowDimensions();\n\n    const id = card.val.value + \" \" + card.val.deck// calculate each cards spesific id\n    const cardType = CardTypeFinder(card) // get correct image for card's value\n    const isActive = card.val.active\n    const isShow = card.val.show\n\n    return (\n        <div\n            draggable={ isDraggable(card) }\n            onDragStart={ clickCard(card,index) }\n            onDrop={ clickCard(card,index) }\n            onDragOver={ (e) => e.preventDefault() }\n            id={id}\n            className = {\n                \"card \" + (isActive ? 'selectedCard' : '') // if card's active property true, highlight to card\n            }\n            onClick = { clickCard(card, index) }\n            style={{\n            marginTop: (marginValue * (width2 < 910 ? 15 : 25)),\n                ...(isShow ? { // if card's show property true, display the card\n                    background: (`var(${cardType})`),\n                                backgroundSize: 'contain',\n                                backgroundRepeat: 'no-repeat'} : \"\"),\n                    ...( width2 < 1150 ? {height: width2 > 910 ? 90 : 50,\n                                        width: width2 > 910 ? 65 : 36} : \"\") }}  >\n        </div>\n    )\n}\n\nexport default Card\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,mBAAmB,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,IAAI,GAAGA,CAAC;EAACC,WAAW;EAAEC,SAAS;EAAEC,KAAK;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAEpD,MAAMC,WAAW,GAAIF,IAAI,IAAK;IAC1B,OAAOA,IAAI,CAACG,IAAI,KAAK,IAAI,EAAE;MAEvB,IAAIC,UAAU,GAAG,CAACJ,IAAI,CAACG,IAAI,CAACE,GAAG,CAACC,KAAK,GAAG,CAAC;MACzC,IAAIC,SAAS,GAAG,CAACP,IAAI,CAACK,GAAG,CAACC,KAAK;MAC/B;MACA,IAAIF,UAAU,KAAKG,SAAS,IAAIP,IAAI,CAACK,GAAG,CAACG,IAAI,KAAK,KAAK,EAAE;QACrD,OAAO,KAAK;MAChB;MAEAR,IAAI,GAAGA,IAAI,CAACG,IAAI;IACpB;IACA,OAAO,IAAI;EACf,CAAC;EAED,MAAM;IAAEM,KAAK,EAACC;EAAO,CAAC,GAAGjB,mBAAmB,CAAC,CAAC;EAE9C,MAAMkB,EAAE,GAAGX,IAAI,CAACK,GAAG,CAACC,KAAK,GAAG,GAAG,GAAGN,IAAI,CAACK,GAAG,CAACO,IAAI;EAC/C,MAAMC,QAAQ,GAAGrB,cAAc,CAACQ,IAAI,CAAC,EAAC;EACtC,MAAMc,QAAQ,GAAGd,IAAI,CAACK,GAAG,CAACU,MAAM;EAChC,MAAMC,MAAM,GAAGhB,IAAI,CAACK,GAAG,CAACG,IAAI;EAE5B,oBACIb,OAAA;IACIsB,SAAS,EAAGf,WAAW,CAACF,IAAI,CAAG;IAC/BkB,WAAW,EAAGpB,SAAS,CAACE,IAAI,EAACD,KAAK,CAAG;IACrCoB,MAAM,EAAGrB,SAAS,CAACE,IAAI,EAACD,KAAK,CAAG;IAChCqB,UAAU,EAAIC,CAAC,IAAKA,CAAC,CAACC,cAAc,CAAC,CAAG;IACxCX,EAAE,EAAEA,EAAG;IACPY,SAAS,EACL,OAAO,IAAIT,QAAQ,GAAG,cAAc,GAAG,EAAE,CAAC,CAAC;IAC9C;IACDU,OAAO,EAAK1B,SAAS,CAACE,IAAI,EAAED,KAAK,CAAG;IACpC0B,KAAK,EAAE;MACPC,SAAS,EAAG7B,WAAW,IAAIa,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAE;MAC/C,IAAIM,MAAM,GAAG;QAAE;QACXW,UAAU,EAAI,OAAMd,QAAS,GAAG;QACpBe,cAAc,EAAE,SAAS;QACzBC,gBAAgB,EAAE;MAAW,CAAC,GAAG,EAAE,CAAC;MAChD,IAAKnB,MAAM,GAAG,IAAI,GAAG;QAACoB,MAAM,EAAEpB,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE;QAChCD,KAAK,EAAEC,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG;MAAE,CAAC,GAAG,EAAE;IAAE;EAAE;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEd,CAAC;AAAAjC,EAAA,CA7CKL,IAAI;EAAA,QAiBmBH,mBAAmB;AAAA;AAAA0C,EAAA,GAjB1CvC,IAAI;AA+CV,eAAeA,IAAI;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}