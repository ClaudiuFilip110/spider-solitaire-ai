{"ast":null,"code":"var _jsxFileName = \"/Users/claudiufilip/Developer/personal-projects/spider-solitaire-ai/frontend/src/components/CardHolder/CardHolder.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { blankWrap } from '../../logic/ComponentCreate';\nimport '../../assets/css/cardholder.css';\nimport useWindowDimensions from '../../useWindowDimensions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardholders = (clickRemCards, remCardCount, width2) => {\n  let marginValue = 0;\n  let cardHolderPush = [];\n  for (let index = 0; index < remCardCount; index++) {\n    cardHolderPush.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: marginValue * (width2 > 910 ? 30 : 15),\n        ...(width2 < 1150 ? {\n          height: width2 > 910 ? 90 : 50,\n          width: width2 > 910 ? 65 : 36\n        } : \"\")\n      },\n      className: \"card cardholder\",\n      onClick: clickRemCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this));\n    marginValue += 1;\n  }\n  return cardHolderPush;\n};\nconst CardHolder = ({\n  clickRemCards,\n  remCards,\n  complete\n}) => {\n  _s();\n  const {\n    width\n  } = useWindowDimensions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top\" + (width < 640 ? \" d-grid-row\" : \"\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardholders\",\n      children: cardholders(clickRemCards, remCards.length / 10, width)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"blank-wrap\",\n      children: blankWrap(complete)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(CardHolder, \"ryR7mLr8YBgJ6dEcE7angTe4Nyw=\", false, function () {\n  return [useWindowDimensions];\n});\n_c = CardHolder;\nexport default CardHolder;\nvar _c;\n$RefreshReg$(_c, \"CardHolder\");","map":{"version":3,"names":["React","blankWrap","useWindowDimensions","jsxDEV","_jsxDEV","cardholders","clickRemCards","remCardCount","width2","marginValue","cardHolderPush","index","push","style","marginLeft","height","width","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","CardHolder","remCards","complete","_s","children","length","_c","$RefreshReg$"],"sources":["/Users/claudiufilip/Developer/personal-projects/spider-solitaire-ai/frontend/src/components/CardHolder/CardHolder.js"],"sourcesContent":["import React from 'react'\nimport {\n    blankWrap\n} from '../../logic/ComponentCreate'\nimport '../../assets/css/cardholder.css'\nimport useWindowDimensions from '../../useWindowDimensions'\n\nconst cardholders = (clickRemCards, remCardCount, width2) => {\n\n    let marginValue = 0\n    let cardHolderPush = []\n    for (let index = 0; index < remCardCount; index++) {\n        cardHolderPush.push(\n            <div \n            style={{marginLeft: marginValue*( width2 > 910 ? 30 : 15),\n            ...( width2 < 1150 ? {height: width2 > 910 ? 90 : 50,\n                                        width: width2 > 910 ? 65 : 36} : \"\")}}\n            className = \"card cardholder\"\n            onClick = { clickRemCards } >\n        </div>\n        )\n        marginValue += 1\n    }\n    return cardHolderPush\n}\n\nconst CardHolder = ({clickRemCards, remCards, complete}) => {\n\n    const { width } = useWindowDimensions();\n\n    return (\n        <div className={\"top\" + (width < 640 ? \" d-grid-row\" : \"\")} >\n            <div className=\"cardholders\">\n        {cardholders(clickRemCards, remCards.length/10, width)}\n        </div>\n\n        <ul className = \"blank-wrap\" > \n        { blankWrap(complete) } \n        </ul>\n        </div>\n    )\n}\n\nexport default CardHolder\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,SAAS,QACN,6BAA6B;AACpC,OAAO,iCAAiC;AACxC,OAAOC,mBAAmB,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGA,CAACC,aAAa,EAAEC,YAAY,EAAEC,MAAM,KAAK;EAEzD,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIC,cAAc,GAAG,EAAE;EACvB,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGJ,YAAY,EAAEI,KAAK,EAAE,EAAE;IAC/CD,cAAc,CAACE,IAAI,eACfR,OAAA;MACAS,KAAK,EAAE;QAACC,UAAU,EAAEL,WAAW,IAAGD,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;QACzD,IAAKA,MAAM,GAAG,IAAI,GAAG;UAACO,MAAM,EAAEP,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE;UACxBQ,KAAK,EAAER,MAAM,GAAG,GAAG,GAAG,EAAE,GAAG;QAAE,CAAC,GAAG,EAAE;MAAC,CAAE;MAClES,SAAS,EAAG,iBAAiB;MAC7BC,OAAO,EAAKZ;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACL,CAAC;IACDb,WAAW,IAAI,CAAC;EACpB;EACA,OAAOC,cAAc;AACzB,CAAC;AAED,MAAMa,UAAU,GAAGA,CAAC;EAACjB,aAAa;EAAEkB,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAExD,MAAM;IAAEV;EAAM,CAAC,GAAGd,mBAAmB,CAAC,CAAC;EAEvC,oBACIE,OAAA;IAAKa,SAAS,EAAE,KAAK,IAAID,KAAK,GAAG,GAAG,GAAG,aAAa,GAAG,EAAE,CAAE;IAAAW,QAAA,gBACvDvB,OAAA;MAAKa,SAAS,EAAC,aAAa;MAAAU,QAAA,EAC/BtB,WAAW,CAACC,aAAa,EAAEkB,QAAQ,CAACI,MAAM,GAAC,EAAE,EAAEZ,KAAK;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eAENlB,OAAA;MAAIa,SAAS,EAAG,YAAY;MAAAU,QAAA,EAC1B1B,SAAS,CAACwB,QAAQ;IAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAI,EAAA,CAfKH,UAAU;EAAA,QAEMrB,mBAAmB;AAAA;AAAA2B,EAAA,GAFnCN,UAAU;AAiBhB,eAAeA,UAAU;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}